{"version":3,"sources":["components/Navbar/index.js","components/BannerImage/index.js","components/RepoCard/index.js","components/RecentProjects/index.js","utilities/clean.js","pages/Home/index.js","utilities/titleCase.js","utilities/capitaliseFirst.js","components/ListProjects/index.js","pages/Projects/index.js","components/RenderMarkdown/index.js","components/AboutProject/index.js","pages/ProjectDetails/index.js","pages/PageNotFound/index.js","App/index.js","index.js"],"names":["withRouter","props","activeKey","location","pathname","split","variant","bg","expand","fixed","Brand","to","className","icon","faUserSecret","Toggle","aria-controls","Collapse","id","Nav","Link","as","bsPrefix","eventKey","href","target","size","faGithub","BannerImage","src","alt","RepoCard","repo","Error","name","description","created_at","updated_at","license","createdAt","updatedAt","moment","format","toLowerCase","Card","Body","Title","Text","Footer","RecentProjects","useState","recentProjects","setRecentProjects","loading","setLoading","useEffect","a","axios","url","headers","data","minTime","subtract","unix","arr","map","index","recentlyUpdatedRepos","filter","el","getRepos","length","formatRecentProjects","Home","titleCase","str","charAt","toUpperCase","slice","capitaliseFirst","join","ListProjects","projects","setProjects","sort","setSort","sortDirection","setSortDirection","sortOptions","Map","sortDirectionOptions","SortOptions","options","key","value","push","SortDirectionOptions","Select","forwardRef","ref","children","style","labelledBy","onChange","label","Form","Group","aria-labelledby","controlId","Label","srOnly","Control","custom","Dropdown","alignRight","Button","faFilter","Menu","Item","active","e","formatProjects","Projects","RenderMarkdown","source","remarkPlugins","gfm","rehypePlugins","rehypeHighlight","rehypeAutolinkHeadings","rehypeSlug","rehypeSanitize","clobberPrefix","components","AboutProject","details","detailsToInclude","detailsObj","StrongH4","Section","title","Details","formatReleases","releases","tag_name","published_at","html_url","body","Accordion","Header","toString","Subtitle","h1","h2","h3","h4","color","content","i","detail","includes","replace","ProjectDetails","setDetails","readMe","setReadMe","match","params","repoData","releasesData","Object","assign","window","atob","getRepo","Row","Col","PageNotFound","class","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24283c1b.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar as NavBar, Nav } from 'react-bootstrap';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserSecret } from '@fortawesome/free-solid-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport './index.css';\n\nfunction Navbar(props) {\n  const { pathname } = props.location;\n\n  let activeKey = pathname.split('/')[1];\n\n  if (activeKey === '') {\n    activeKey = '/';\n  }\n\n  return (\n    <NavBar variant=\"dark\" bg=\"dark\" expand=\"lg\" fixed=\"top\">\n      <NavBar.Brand>\n        <Link to='/'>\n          <div className=\"logo-wrapper mx-1\">\n            <FontAwesomeIcon className=\"logo logo-brand\" icon={faUserSecret} />\n          </div>\n        </Link>\n      </NavBar.Brand>\n      <NavBar.Toggle aria-controls=\"nav\" />\n      <NavBar.Collapse id=\"nav\">\n        <Nav className=\"mr-auto\" activeKey={activeKey}>\n          <Link to='/' className=\"nav-link\">\n            <Nav.Link\n              as=\"span\"\n              bsPrefix=''\n              eventKey='/'\n            >\n              Home\n            </Nav.Link>\n          </Link>\n          <Link to='/projects' className=\"nav-link\">\n            <Nav.Link\n              as=\"span\"\n              bsPrefix=''\n              eventKey='projects'\n            >\n              Projects\n            </Nav.Link>\n          </Link>\n          <Link to='/about' className=\"nav-link\">\n            <Nav.Link\n              as=\"span\"\n              bsPrefix=''\n              eventKey='about'\n            >\n              About\n            </Nav.Link>\n          </Link>\n        </Nav>\n        <Nav>\n          <Nav.Link href='https://github.com/Th3-S1lenc3' target=\"_blank\">\n            <FontAwesomeIcon size='2x' icon={faGithub} />\n          </Nav.Link>\n        </Nav>\n      </NavBar.Collapse>\n    </NavBar>\n  )\n}\n\nexport default withRouter(Navbar);\n","import React from 'react';\n\nimport './index.css';\n\nexport default function BannerImage() {\n  return (\n    <div className=\"header mb-3\">\n      <img className=\"bannerImg\" src=\"/images/banner.jpg\" alt=\"BannerImage\" />\n      <div className=\"bannerText border border-white p-2\">\n        Th3_S1lenc3\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { Card } from 'react-bootstrap';\n\nexport default function RepoCard(props) {\n\n  if (!props.repo) {\n    throw new Error('RepoCard requires repo attribute')\n  }\n\n  const {\n    name,\n    description,\n    created_at,\n    updated_at,\n    license,\n  } = props.repo;\n\n  let createdAt = 'Unable to get creation date.';\n  let updatedAt = 'Unable to get last comit date.';\n\n  if (created_at) {\n    createdAt = moment(created_at).format('MMMM Do YYYY');\n  }\n\n  if (updated_at) {\n    updatedAt = moment(updated_at).format('MMMM Do YYYY [at] HH:mm:ss');\n  }\n\n  return (\n    <Link to={`/projects/${name.toLowerCase()}`} className=\"project-details\">\n      <Card className=\"project mx-2 my-3\">\n        <Card.Body>\n          <Card.Title className=\"project-name\">\n            {name}\n          </Card.Title>\n          <Card.Text className=\"project-description\">\n            {description ?? 'No Description'}\n          </Card.Text>\n        </Card.Body>\n        <Card.Footer className=\"project-footer\">\n          <span className=\"project-created_at mr-2\">\n            Created: {createdAt}\n          </span>\n          <span className=\"project-updated_at mr-2\">\n            Last Commit: {updatedAt}\n          </span>\n          <span className=\"project-licenseName mr-2\">\n            License: {license?.name ?? 'No License'}\n          </span>\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\n\nimport RepoCard from '@components/RepoCard';\n\nimport clean from '@utilities/clean';\n\nimport './index.css';\n\nexport default function RecentProjects() {\n  const [recentProjects, setRecentProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getRepos = async () => {\n      const { data } = await axios({\n        url: 'https://api.github.com/users/Th3-S1lenc3/repos',\n        headers: {\n          'Accept': 'application/vnd.github.v3+json'\n        },\n      });\n\n      const minTime = moment().subtract(3, 'months').unix();\n\n      const recentlyUpdatedRepos = clean(data.map((repo, index) => {\n        const updateTime = moment(repo['updated_at']).unix();\n        if (updateTime > minTime) {\n          return repo;\n        }\n        return null;\n      }));\n\n      setRecentProjects(recentlyUpdatedRepos);\n      setLoading(false);\n    }\n    getRepos();\n  }, []);\n\n  if (loading) return <div>Getting Recent Projects...</div>\n\n  const formatRecentProjects = () => {\n    if (recentProjects.length > 0 && recentProjects.map) {\n      return recentProjects.map((repo, index) => {\n        return (\n          <RepoCard key={index} repo={repo} />\n        );\n      });\n    }\n  }\n\n  return (\n    <div>\n      <h1>Recent Projects</h1>\n      {formatRecentProjects()}\n    </div>\n  )\n}\n","export default function clean(arr) {\n  return arr.filter(el => el);\n}\n","import React from 'react';\n\nimport BannerImage from '@components/BannerImage';\nimport RecentProjects from '@components/RecentProjects';\n\nexport default function Home() {\n  return (\n    <div className=\"page\">\n      <BannerImage />\n      <RecentProjects />\n    </div>\n  )\n}\n","import capitaliseFirst from './capitaliseFirst';\n\nexport default function titleCase(str) {\n  return str.split(' ').map((str) => { return capitaliseFirst(str) }).join(' ');\n}\n","export default function capitaliseFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n","import React, { useState, useEffect, forwardRef } from 'react';\nimport { Button, Dropdown, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\n\nimport RepoCard from '@components/RepoCard';\n\nimport titleCase from '@utilities/titleCase';\n\nimport './index.css';\n\nexport default function ListProjects() {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [sort, setSort] = useState('created');\n  const [sortDirection, setSortDirection] = useState('desc');\n\n  useEffect(() => {\n    const getRepos = async () => {\n      const { data } = await axios({\n        url: `https://api.github.com/users/Th3-S1lenc3/repos?sort=${sort}&direction=${sortDirection}`,\n        headers: {\n          'Accept': 'application/vnd.github.v3+json'\n        },\n      });\n\n      setProjects(data);\n      setLoading(false);\n    }\n    getRepos();\n  }, [sort, sortDirection]);\n\n  if (loading) return <div>Getting Projects...</div>\n\n  const formatProjects = () => {\n    if (projects.length > 0 && projects.map) {\n      return projects.map((repo, index) => {\n        return (\n          <RepoCard key={index} repo={repo} />\n        );\n      });\n    }\n  }\n\n  const sortOptions = new Map([\n    ['created', 'created'],\n    ['updated', 'updated'],\n    ['pushed', 'pushed'],\n    ['full_name', 'full name'],\n  ]);\n\n  const sortDirectionOptions = new Map([\n    ['asc', 'ascending'],\n    ['desc', 'descending'],\n  ]);\n\n  const SortOptions = () => {\n    const options = [];\n    let index = 1;\n\n    for (let [key, value] of sortOptions) {\n      options.push(\n        <option key={index} value={key}>{titleCase(value)}</option>\n      )\n      index++;\n    }\n    return options;\n  };\n\n  const SortDirectionOptions = () => {\n    const options = [];\n    let index = 10;\n\n    for (let [key, value] of sortDirectionOptions) {\n      options.push(\n        <option key={index} value={key}>{titleCase(value)}</option>\n      )\n      index++;\n    }\n    return options;\n  };\n\n  const Select = forwardRef(({ children, style, className, id, 'aria-labelledby': labelledBy, onChange, value, label }, ref) => (\n    <Form.Group\n      ref={ref}\n      style={style}\n      className={className}\n      aria-labelledby={labelledBy}\n      controlId={id}\n    >\n      <Form.Label\n        srOnly={true}\n      >\n        {label ?? 'No Label'}\n      </Form.Label>\n      <Form.Control\n        as='select'\n        custom\n        onChange={onChange}\n        value={value}\n      >\n        {children}\n      </Form.Control>\n    </Form.Group>\n  ));\n\n  return (\n    <div className=\"pt-1\">\n      <div className=\"list-projects-header\">\n        <div/>\n        <h1>Projects</h1>\n        <div className=\"mr-2\">\n          <Dropdown alignRight>\n            <Dropdown.Toggle as={Button} variant='secondary'>\n              <FontAwesomeIcon icon={faFilter} />\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu className='p-2'>\n              <Dropdown.Item\n                active={false}\n                as={Select}\n                label='Sort By'\n                id='selectSort'\n                value={sort}\n                onChange={e => setSort(e.target.value)}\n              >\n                <SortOptions />\n              </Dropdown.Item>\n              <Dropdown.Item\n                as={Select}\n                id='selectSortDirection'\n                value={sortDirection}\n                onChange={e => setSortDirection(e.target.value)}\n              >\n                <SortDirectionOptions />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </div>\n      <div className=\"list-projects-content\">\n        {formatProjects()}\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\n\nimport ListProjects from '@components/ListProjects';\n\nexport default function Projects() {\n  return (\n    <div className=\"page\">\n      <ListProjects />\n    </div>\n  )\n}\n","import ReactMarkdown  from 'react-markdown';\nimport gfm from 'remark-gfm'\nimport rehypeHighlight from 'rehype-highlight';\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\nimport rehypeSlug from 'rehype-slug';\nimport rehypeSanitize from 'rehype-sanitize';\n\nimport './index.css';\n\nexport default function RenderMarkdown(props) {\n  const { source, className, options } = props;\n\n  if (options && typeof options !== 'object') {\n    throw new Error('options must be objects');\n  }\n\n  return (\n    <ReactMarkdown\n      remarkPlugins={[gfm]}\n      rehypePlugins={[\n        rehypeHighlight,\n        rehypeAutolinkHeadings,\n        rehypeSlug,\n        [rehypeSanitize, {\n          clobberPrefix: '',\n        }],\n      ]}\n      children={source}\n      components={options}\n      className={`readme-preview ${className}`}\n    />\n  )\n}\n","import React, { Fragment } from 'react';\nimport moment from 'moment';\nimport { Accordion, Card } from 'react-bootstrap';\n\nimport RenderMarkdown from '@components/RenderMarkdown';\n\nimport titleCase from '@utilities/titleCase';\n\nimport './index.css';\n\nexport default function AboutProject(props) {\n  const {\n    name\n  } = props.details;\n\n  const detailsToInclude = [\n    'description',\n    'created_at',\n    'updated_at',\n    'license',\n    'forks',\n    'open_issues',\n    'watchers',\n    'language',\n    'releases',\n  ];\n\n  const { details: detailsObj } = props;\n\n  const StrongH4 = ({ children }) => (\n    <h4 className=\"pt-2\">\n      <strong>\n        {children}\n      </strong>\n    </h4>\n  );\n\n  const Section = ({ title, children, className }) => (\n    <section className={className}>\n      <StrongH4>{titleCase(title)}</StrongH4>\n      {children}\n    </section>\n  );\n\n  const Details = () => {\n    const formatReleases = (releases) => {\n      if (releases && releases.length > 0) {\n        const data = releases.map(({\n          tag_name,\n          name,\n          published_at,\n          html_url,\n          body\n        }, index) => (\n          <Card key={index}>\n            <Accordion.Toggle as={Card.Header} eventKey={index.toString()} id={index}>\n              {tag_name}\n            </Accordion.Toggle>\n            <Accordion.Collapse eventKey={index.toString()} id={index}>\n              <Card.Body>\n                <Card.Title>{name}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted releases-subtitle\">\n                  Published:\n                  {moment(published_at).format(' MMMM Do YYYY')}\n                </Card.Subtitle>\n                <RenderMarkdown\n                  source={body}\n                  className=\"releases-markdown\"\n                  options={{\n                    h1: 'h2',\n                    h2: 'h3',\n                    h3: 'h4',\n                    h4: 'h5',\n                  }}\n                />\n                <p>\n                  See{' '}\n                  <a\n                    href={html_url}\n                    target=\"_blank\"\n                    style={{color: 'var(--markdown-link-color)'}}\n                  >\n                    Assets\n                  </a>\n                </p>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        ));\n\n        return (\n          <Accordion>\n            {data}\n          </Accordion>\n        );\n      }\n      else {\n        return '';\n      }\n\n\n    }\n\n    const content = [];\n    let i = 1;\n\n    for (let detail in detailsObj) {\n      if (detailsToInclude.includes(detail)) {\n        let body = detailsObj[detail] ?? '';\n\n        if (typeof body === 'object') {\n          body = body?.name;\n        }\n\n        switch (detail) {\n          case 'created_at':\n            detail = 'created';\n            body = moment(body).format('MMMM Do YYYY');\n            break;\n          case 'updated_at':\n            detail = 'last_commit';\n            body = moment(body).format('MMMM Do YYYY [at] HH:mm:ss');\n            break;\n          case 'releases':\n            body = formatReleases(detailsObj[detail]);\n            break;\n          default:\n            break;\n        }\n\n        body = body !== '' ? body : `No ${titleCase(detail.replace('_', ' '))}`;\n\n        content.push(\n          <Section key={i} title={detail.replace('_', ' ')}>\n            {body}\n          </Section>\n        );\n\n        i++;\n      }\n    }\n\n    return (\n      <Fragment>\n        {content}\n      </Fragment>\n    )\n  }\n\n  return (\n    <div className='project-details-about border border-secondary rounded my-2 p-4'>\n      <h3>Project: {name}</h3>\n      <Details />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'react-bootstrap';\n\nimport RenderMarkdown from '@components/RenderMarkdown';\nimport AboutProject from '@components/AboutProject';\n\nimport './index.css';\n\nexport default function ProjectDetails(props) {\n  const [loading, setLoading] = useState(true);\n  const [details, setDetails] = useState({});\n  const [readMe, setReadMe] = useState('');\n\n  useEffect(() => {\n    const getRepo = async () => {\n      const { repo } = props.match.params;\n\n      const { data: repoData } = await axios({\n        url: `https://api.github.com/repos/Th3-S1lenc3/${repo}`,\n        headers: {\n          'Accept': 'application/vnd.github.v3+json'\n        },\n      });\n\n      const { data: releasesData } = await axios({\n        url: `https://api.github.com/repos/Th3-S1lenc3/${repo}/releases`,\n        headers: {\n          'Accept': 'application/vnd.github.v3+json'\n        },\n      });\n\n\n      const data = Object.assign({}, repoData, {releases: releasesData});\n\n      const { data: readMe } = await axios({\n        url: `https://api.github.com/repos/Th3-S1lenc3/${repo}/readme`,\n        headers: {\n          'Accept': 'application/vnd.github.v3+json'\n        },\n      });\n\n      setReadMe(window.atob(readMe.content));\n      setDetails(data);\n      setLoading(false);\n    }\n    getRepo();\n  }, [props.match.params])\n\n  if (loading) return <div className=\"page\">Fetching Repository Details...</div>\n\n  return (\n    <div className=\"page page-centre\">\n      <Row className=\"project-details-page\">\n        <Col className=\"border border-secondary rounded my-2 p-4\">\n          <RenderMarkdown source={readMe} />\n        </Col>\n        <Col>\n          <AboutProject details={details} />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function PageNotFound() {\n  return (\n    <div class=\"page\">\n      404 Page Not Found\n    </div>\n  )\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from '@components/Navbar';\n\nimport Home from '@pages/Home';\nimport Projects from '@pages/Projects';\nimport ProjectDetails from '@pages/ProjectDetails';\n\n\nimport PageNotFound from '@pages/PageNotFound';\n\nimport './index.css';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/projects\" component={Projects} />\n          <Route exact path=\"/projects/:repo\" component={ProjectDetails} />\n          <Route path=\"/\" component={PageNotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}